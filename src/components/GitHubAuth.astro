---
// GitHub OAuth Authentication Component
---

<div id="auth-container" class="auth-container">
  <div class="auth-content">
    <div class="auth-header">
      <svg class="github-logo" width="48" height="48" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
      </svg>
      <h2>Editor Access Required</h2>
      <p>Please authenticate with GitHub to access the content editor.</p>
    </div>
    
    <button id="github-auth-btn" class="github-auth-btn">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
      </svg>
      Sign in with GitHub
    </button>
    
    <div class="auth-info">
      <p><strong>Why GitHub authentication?</strong></p>
      <ul>
        <li>Secure access to the content editor</li>
        <li>Only authorized users can create content</li>
        <li>Your content remains protected</li>
      </ul>
    </div>
  </div>
</div>

<script>
  // GitHub OAuth Configuration
  const GITHUB_CLIENT_ID = 'YOUR_GITHUB_CLIENT_ID'; // You'll need to set this
  const REDIRECT_URI = window.location.origin + '/docs/editor/';
  const ALLOWED_USERS = ['TechRich']; // Add GitHub usernames who can access
  
  // Check if user is already authenticated
  function checkAuthStatus() {
    const token = localStorage.getItem('github_token');
    const user = localStorage.getItem('github_user');
    
    if (token && user) {
      // Verify the user is allowed
      if (ALLOWED_USERS.includes(user)) {
        showEditor();
        return true;
      } else {
        // User not in allowed list
        localStorage.removeItem('github_token');
        localStorage.removeItem('github_user');
        showAuth();
      }
    }
    return false;
  }
  
  // Show the editor
  function showEditor() {
    const authContainer = document.getElementById('auth-container');
    const editorContainer = document.querySelector('.prosemirror-container');
    
    if (authContainer) authContainer.style.display = 'none';
    if (editorContainer) editorContainer.style.display = 'block';
    
    // Call the editor's show function if available
    if (window.showEditor) {
      window.showEditor();
    }
  }
  
  // Show the auth screen
  function showAuth() {
    const authContainer = document.getElementById('auth-container');
    const editorContainer = document.querySelector('.prosemirror-container');
    
    if (authContainer) authContainer.style.display = 'block';
    if (editorContainer) editorContainer.style.display = 'none';
    
    // Call the editor's hide function if available
    if (window.hideEditor) {
      window.hideEditor();
    }
  }
  
  // Handle GitHub OAuth
  function handleGitHubAuth() {
    const authUrl = `https://github.com/login/oauth/authorize?client_id=${GITHUB_CLIENT_ID}&redirect_uri=${encodeURIComponent(REDIRECT_URI)}&scope=read:user`;
    window.location.href = authUrl;
  }
  
  // Handle OAuth callback
  function handleOAuthCallback() {
    const urlParams = new URLSearchParams(window.location.search);
    const code = urlParams.get('code');
    
    if (code) {
      // Exchange code for token (this would typically be done server-side)
      // For now, we'll simulate the process
      console.log('OAuth code received:', code);
      
      // In a real implementation, you'd exchange this code for a token
      // For demo purposes, we'll show a message and simulate authentication
      alert('OAuth code received. In production, this would exchange for a token.');
      
      // Simulate successful authentication for demo
      localStorage.setItem('github_token', 'demo_token_' + Date.now());
      localStorage.setItem('github_user', 'TechRich');
      
      // Remove the code from URL
      window.history.replaceState({}, document.title, window.location.pathname);
      
      // Show the editor
      showEditor();
    }
  }
  
  // Initialize authentication
  document.addEventListener('DOMContentLoaded', function() {
    // Check for OAuth callback
    handleOAuthCallback();
    
    // Check current auth status
    if (!checkAuthStatus()) {
      showAuth();
    }
    
    // Add event listener to auth button
    const authBtn = document.getElementById('github-auth-btn');
    if (authBtn) {
      authBtn.addEventListener('click', handleGitHubAuth);
    }
  });
  
  // Logout function
  function logout() {
    localStorage.removeItem('github_token');
    localStorage.removeItem('github_user');
    showAuth();
  }
  
  // Make logout available globally
  window.logout = logout;
</script>

<style>
  .auth-container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 500px;
    padding: 2rem;
  }
  
  .auth-content {
    max-width: 500px;
    text-align: center;
    background: var(--sl-color-bg-nav);
    border: 1px solid var(--sl-color-border);
    border-radius: 12px;
    padding: 3rem 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  .auth-header {
    margin-bottom: 2rem;
  }
  
  .github-logo {
    color: var(--sl-color-accent);
    margin-bottom: 1rem;
  }
  
  .auth-header h2 {
    margin: 1rem 0 0.5rem 0;
    color: var(--sl-color-text);
    font-size: 1.5rem;
  }
  
  .auth-header p {
    color: var(--sl-color-text-sl);
    margin: 0;
  }
  
  .github-auth-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
    padding: 1rem 2rem;
    background: var(--sl-color-text);
    color: var(--sl-color-bg);
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-bottom: 2rem;
  }
  
  .github-auth-btn:hover {
    background: var(--sl-color-text-sl);
    transform: translateY(-1px);
  }
  
  .auth-info {
    text-align: left;
    background: var(--sl-color-accent-low);
    border: 1px solid var(--sl-color-border);
    border-radius: 8px;
    padding: 1.5rem;
  }
  
  .auth-info p {
    margin: 0 0 1rem 0;
    color: var(--sl-color-text);
    font-weight: 600;
  }
  
  .auth-info ul {
    margin: 0;
    padding-left: 1.5rem;
    color: var(--sl-color-text-sl);
  }
  
  .auth-info li {
    margin: 0.5rem 0;
  }
  
  @media (max-width: 768px) {
    .auth-content {
      padding: 2rem 1.5rem;
    }
    
    .github-auth-btn {
      padding: 0.875rem 1.5rem;
      font-size: 1rem;
    }
  }
</style>