---
// ProseMirror Editor Component for Astro + Starlight
---

<div class="prosemirror-container">
  <div class="editor-toolbar">
    <button class="toolbar-btn" data-command="bold" title="Bold">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M15.6 11.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 7.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z"/>
      </svg>
    </button>
    <button class="toolbar-btn" data-command="italic" title="Italic">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z"/>
      </svg>
    </button>
    <div class="toolbar-separator"></div>
    <button class="toolbar-btn" data-command="undo" title="Undo">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z"/>
      </svg>
    </button>
    <button class="toolbar-btn" data-command="redo" title="Redo">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M18.4 19.6c-1.39 1.39-3.16 2.4-5.4 2.4-3.54 0-6.55-2.31-7.6-5.5l-2.37.78C4.92 18.97 8.85 22 13.5 22c2.65 0 5.05-.99 6.9-2.6L22 17v-9h-9l3.62 3.62z"/>
      </svg>
    </button>
  </div>
  
  <div id="editor" class="prosemirror-editor" contenteditable="true">
    <p>Welcome to your personal website editor! Start typing here...</p>
  </div>
  
  <div class="editor-footer">
    <button id="saveBtn" class="save-btn">Save to Markdown</button>
    <button id="previewBtn" class="preview-btn">Preview</button>
    <div class="word-count">Words: <span id="wordCount">0</span></div>
  </div>
  
  <div id="preview" class="markdown-preview" style="display: none;"></div>
</div>

<script>
  // Simple rich text editor functionality
  let editor = document.getElementById('editor');
  let wordCount = document.getElementById('wordCount');
  
  // Update word count
  function updateWordCount() {
    const text = editor.textContent || '';
    const words = text.split(/\s+/).filter(word => word.length > 0).length;
    wordCount.textContent = words;
  }
  
  // Initialize word count
  updateWordCount();
  
  // Listen for input changes
  editor.addEventListener('input', updateWordCount);
  
  // Toolbar functionality
  document.querySelectorAll('.toolbar-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      const command = e.currentTarget.dataset.command;
      
      switch(command) {
        case 'bold':
          document.execCommand('bold', false, null);
          break;
        case 'italic':
          document.execCommand('italic', false, null);
          break;
        case 'undo':
          document.execCommand('undo', false, null);
          break;
        case 'redo':
          document.execCommand('redo', false, null);
          break;
      }
      
      editor.focus();
      updateWordCount();
    });
  });
  
  // Save functionality
  document.getElementById('saveBtn').addEventListener('click', () => {
    const content = editor.innerHTML;
    const blob = new Blob([content], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'content.html';
    a.click();
    URL.revokeObjectURL(url);
  });
  
  // Preview functionality
  document.getElementById('previewBtn').addEventListener('click', () => {
    const preview = document.getElementById('preview');
    const content = editor.innerHTML;
    
    if (preview.style.display === 'none') {
      preview.innerHTML = `<h3>Preview:</h3><div>${content}</div>`;
      preview.style.display = 'block';
      document.getElementById('previewBtn').textContent = 'Hide Preview';
    } else {
      preview.style.display = 'none';
      document.getElementById('previewBtn').textContent = 'Preview';
    }
  });
  
  // Keyboard shortcuts
  editor.addEventListener('keydown', (e) => {
    if (e.ctrlKey || e.metaKey) {
      switch(e.key) {
        case 'b':
          e.preventDefault();
          document.execCommand('bold', false, null);
          break;
        case 'i':
          e.preventDefault();
          document.execCommand('italic', false, null);
          break;
        case 'z':
          if (e.shiftKey) {
            e.preventDefault();
            document.execCommand('redo', false, null);
          } else {
            e.preventDefault();
            document.execCommand('undo', false, null);
          }
          break;
        case 'y':
          e.preventDefault();
          document.execCommand('redo', false, null);
          break;
      }
    }
  });
</script>

<style>
  .prosemirror-container {
    max-width: 800px;
    margin: 0 auto;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }

  .editor-toolbar {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px;
    background: var(--sl-color-accent);
    border-radius: 8px 8px 0 0;
    border: 1px solid var(--sl-color-border);
    border-bottom: none;
  }

  .toolbar-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    border: none;
    background: transparent;
    color: var(--sl-color-text);
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .toolbar-btn:hover {
    background: var(--sl-color-accent-high);
  }

  .toolbar-separator {
    width: 1px;
    height: 24px;
    background: var(--sl-color-border);
  }

  .prosemirror-editor {
    min-height: 400px;
    padding: 20px;
    border: 1px solid var(--sl-color-border);
    border-top: none;
    background: var(--sl-color-bg);
    color: var(--sl-color-text);
    line-height: 1.6;
    font-size: 16px;
    outline: none;
  }

  .prosemirror-editor:focus {
    border-color: var(--sl-color-accent);
  }

  .prosemirror-editor p {
    margin: 0 0 16px 0;
  }

  .prosemirror-editor h1,
  .prosemirror-editor h2,
  .prosemirror-editor h3,
  .prosemirror-editor h4,
  .prosemirror-editor h5,
  .prosemirror-editor h6 {
    margin: 24px 0 16px 0;
    font-weight: 600;
  }

  .prosemirror-editor ul,
  .prosemirror-editor ol {
    margin: 16px 0;
    padding-left: 24px;
  }

  .prosemirror-editor li {
    margin: 8px 0;
  }

  .prosemirror-editor blockquote {
    margin: 16px 0;
    padding: 12px 20px;
    border-left: 4px solid var(--sl-color-accent);
    background: var(--sl-color-accent-low);
    font-style: italic;
  }

  .editor-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 16px 20px;
    background: var(--sl-color-bg-nav);
    border: 1px solid var(--sl-color-border);
    border-top: none;
    border-radius: 0 0 8px 8px;
  }

  .save-btn,
  .preview-btn {
    padding: 8px 16px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .save-btn {
    background: var(--sl-color-accent);
    color: white;
  }

  .save-btn:hover {
    background: var(--sl-color-accent-high);
  }

  .preview-btn {
    background: var(--sl-color-bg-nav);
    color: var(--sl-color-text);
    border: 1px solid var(--sl-color-border);
  }

  .preview-btn:hover {
    background: var(--sl-color-accent-low);
  }

  .word-count {
    color: var(--sl-color-text-sl);
    font-size: 14px;
  }

  .markdown-preview {
    margin-top: 20px;
    padding: 20px;
    background: var(--sl-color-bg-nav);
    border: 1px solid var(--sl-color-border);
    border-radius: 8px;
  }

  .markdown-preview div {
    background: var(--sl-color-bg);
    padding: 16px;
    border-radius: 6px;
    overflow-x: auto;
  }

  @media (max-width: 768px) {
    .editor-toolbar {
      flex-wrap: wrap;
      gap: 4px;
    }
    
    .toolbar-btn {
      width: 32px;
      height: 32px;
    }
    
    .editor-footer {
      flex-direction: column;
      gap: 12px;
      align-items: stretch;
    }
    
    .save-btn,
    .preview-btn {
      width: 100%;
    }
  }
</style>